{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["dayjs","extend","localizedFormat","Post","render","this","props","className","htmlToReact","src","withPrefix","alt","dateTime","format","React","Component"],"mappings":"yQAQAA,IAAMC,OAAOC,KAIN,IAQcC,E,kGACnBC,OAAA,WACE,OACE,kBAAC,IAAWC,KAAKC,MACf,6BAASC,UAAU,kBACjB,4BAAQA,UAAU,wBAChB,wBAAIA,UAAU,wBAAwB,IAAMF,KAAKC,MAAO,gCAAiC,OACxF,IAAMD,KAAKC,MAAO,mCAAoC,OACrD,yBAAKC,UAAU,iBACZC,YAAY,IAAMH,KAAKC,MAAO,mCAAoC,SAIxE,IAAMD,KAAKC,MAAO,2CAA4C,OAC7D,yBAAKC,UAAU,cACb,yBACEE,IAAKC,YAAW,IAAML,KAAKC,MAAO,2CAA4C,OAC9EK,IAAK,IAAMN,KAAKC,MAAO,0CAA2C,SAIxE,yBAAKC,UAAU,yBAAyBC,YAAY,IAAMH,KAAKC,MAAO,mBAAoB,QAC1F,4BAAQC,UAAU,sBAChB,0BACEA,UAAU,YACVK,SAAUZ,IAAM,IAAMK,KAAKC,MAAO,+BAAgC,OAAOO,OAAO,QAE/Eb,IAAM,IAAMK,KAAKC,MAAO,+BAAgC,OAAOO,OAAO,Y,GA3BnDC,IAAMC","file":"component---src-templates-post-js-ae44cd5f9aff7effa95e.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport dayjs from \"dayjs\";\nimport { graphql } from \"gatsby\";\n\nimport { Layout } from \"../components/index\";\nimport { htmlToReact, withPrefix } from \"../utils\";\nimport localizedFormat from \"dayjs/plugin/localizedFormat\";\ndayjs.extend(localizedFormat);\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: { eq: $url }) {\n      id\n    }\n  }\n`;\n\nexport default class Post extends React.Component {\n  render() {\n    return (\n      <Layout {...this.props}>\n        <article className=\"post post-full\">\n          <header className=\"post-header inner-sm\">\n            <h1 className=\"underline post-title\">{_.get(this.props, \"pageContext.frontmatter.title\", null)}</h1>\n            {_.get(this.props, \"pageContext.frontmatter.subtitle\", null) && (\n              <div className=\"post-subtitle\">\n                {htmlToReact(_.get(this.props, \"pageContext.frontmatter.subtitle\", null))}\n              </div>\n            )}\n          </header>\n          {_.get(this.props, \"pageContext.frontmatter.content_img_path\", null) && (\n            <div className=\"post-image\">\n              <img\n                src={withPrefix(_.get(this.props, \"pageContext.frontmatter.content_img_path\", null))}\n                alt={_.get(this.props, \"pageContext.frontmatter.content_img_alt\", null)}\n              />\n            </div>\n          )}\n          <div className=\"post-content inner-sm\">{htmlToReact(_.get(this.props, \"pageContext.html\", null))}</div>\n          <footer className=\"post-meta inner-sm\">\n            <time\n              className=\"published\"\n              dateTime={dayjs(_.get(this.props, \"pageContext.frontmatter.date\", null)).format(\"LLL\")}\n            >\n              {dayjs(_.get(this.props, \"pageContext.frontmatter.date\", null)).format(\"LLL\")}\n            </time>\n          </footer>\n        </article>\n      </Layout>\n    );\n  }\n}\n"],"sourceRoot":""}